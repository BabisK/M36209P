% Αρχείο: flight_requests_semantics.pl.
% Επέκταση της γραμματικής "flight_requests.pl", ώστε να επιστρέφεται
% και μια λογική έκφραση που να παριστάνει το νόημα της αντίστοιχης 
% έκφρασης φυσικής γλώσσας.
% Ίων Ανδρουτσόπουλος, 26/1/2004.

% Παραδείγματα:
% > phrase(s(Sem), [θέλω, μια, πτήση, προς, την, αθήνα]).
% Sem = wants(speaker, forsome(Χ, and(flight(Χ), arrive_to(Χ, ath)))) 
%
% > phrase(s(Sem), [κάθε, πελάτης, θέλει, μια, πτήση]).
% Sem = wants(forall(X, client(X)), forsome(Y, flight(Y))) 
%
% > phrase(s(Sem), [ένας, πελάτης, θέλει, μια, πτήση, προς, το, ηράκλειο]).
% Sem = wants(forsome(X, client(X)), forsome(Y, and(flight(Y), arrive_to(Y, herak)))) 
% 
% > phrase(s(Sem), [ο, πελάτης, θέλει, μια, πτήση, προς, την, αθήνα]).
% Sem = wants(the(X, client(X)), forsome(Y, and(flight(Y), arrive_to(Y, ath)))) 

%%%%%% Λεξικό:

% Κύρια ονόματα. Κάθε κύριο όνομα (π.χ. "Αθήνα") αντιστοιχίζεται σε μια
% σταθερά της λογικής (π.χ. "ath").
pn(ath) --> [αθήνα].
pn(thess) --> [θεσσαλονίκη].
pn(herak) --> [ηράκλειο].

% Αντωνυμίες. Η μοναδική αντωνυμία της γραμματικής ("εγώ") αντιστοιχίζεται 
% στη σταθερά "speaker". 
pron(speaker) --> [εγώ].

% Ουσιαστικά. Κάθε ουσιαστικό (π.χ. "πτήση") εισάγει στη λογική έκφραση ένα
% κατηγόρημα (π.χ. "flight(X)"). (Τα σύμβολα που ξεκινάνε με κεφαλαίο είναι 
% μεταβλητές της Prolog. Οι μεταβλητές κάθε κανόνα είναι διαφορετικές, ακόμα
% και αν στη γραμματική έχουν το ίδιο όνομα.) Υπάρχει ένα επιπλέον όρισμα 
% στα αριστερά κάθε κανόνα (το Χ) που περιέχει την ίδια μεταβλητή της Prolog 
% που χρησιμοποιείται ως όρισμα στο κατηγόρημα που εισάγεται από το αντίστοιχο 
% ουσιαστικό. Οπότε, αν ενοποιήσουμε (η ενοποίηση συμβολίζεται με "=") τη 
% μεταβλητή του επιπλέον ορίσματος με μια άλλη μεταβλητή ή σταθερά (π.χ. 
% X = Υ ή Χ = ba737), επηρεάζεται και το όρισμα του κατηγορήματος. Με 
% Χ = ba737, το κατηγόρημα flight(Χ) γίνεται flight(ba737). Μπορούμε να 
% σκεφτούμε το επιπλέον όρισμα (το Χ) ως μια αναφορά στο αντικείμενο του 
% κόσμου για το οποίο το κατηγόρημα δίνει κάποιες πληροφορίες. 
n(X, flight(X)) --> [πτήση].
n(X, client(X)) --> [πελάτης].
n(X, client(X)) --> [πελάτη].
n(X, airport(X)) --> [πόλη].
n(X, airport(X)) --> [αεροδρόμιο].

% Ρήματα. Κάθε ρήμα (π.χ. "θέλω") εισάγει στη λογική έκφραση ένα κατηγόρημα
% (π.χ. "wants(X, Y)"). Υπάρχουν δύο επιπλέον ορίσματα στα αριστερά κάθε κανόνα
% (τα X και Y) που περιέχουν τις ίδιες μεταβλητές της Prolog που χρησιμοποιούνται
% ως ορίσματα στο κατηγόρημα που εισάγεται από το αντίστοιχο ρήμα. Οπότε, αν 
% ενοποιήσουμε αυτά τα ορίσματα με άλλες μεταβλητές ή σταθερές, επηρεάζονται 
% και τα ορίσματα των κατηγορημάτων. Για παράδειγμα, με Χ = speaker και Y = X2, 
% το wants(X,Y) γίνεται wants(speaker, Y) ή ισοδύναμα (αφού οι μεταβλητές Y και 
% X2 έχουν ενοποιηθεί) wants(speaker, X2). 
v(X, Y, wants(X,Y)) --> [θέλω].
v(X, Y, wants(X,Y)) --> [θέλει].
v(X, Y, prefers(X,Y)) --> [προτιμώ].
v(X, Y, prefers(X,Y)) --> [προτιμά].
v(X, Y, wants(X,Y)) --> [επιθυμώ].
v(X, Y, wants(X,Y)) --> [επιθυμεί].

% Προθέσεις. Στη γραμματική αυτού του παραδείγματος, κάθε πρόθεση εισάγει στη 
% λογική έκφραση ένα κατηγόρημα (π.χ. "depart_from(X, L)"). Τα δύο επιπλέον 
% ορίσματα στα αριστερά κάθε κανόνα περιέχουν τις ίδιες μεταβλητές της Prolοg 
% που χρησιμοποιούνται ως ορίσματα στο κατηγόρημα που εισάγεται από την αντίστοιχη
% πρόθεση. Ενοποιώντας αυτά τα ορίσματα με άλλες μεταβλητές ή σταθερές, επηρεάζονται 
% και τα ορίσματα των κατηγορημάτων. Για παράδειγμα, με Χ = speaker και L = ath, 
% το depart_from(X, L) γίνεται depart_from(speaker, ath).
prep(X, L, depart_from(X, L)) --> [από].
prep(X, L, arrive_to(X, L)) --> [προς].

% ’ρθρα. Κάθε άρθρο εισάγει ένα κατηγόρημα που παριστάνει έναν ποσοδείκτη. Για
% παράδειγμα, το "μία" εισάγει το κατηγόρημα forsome(X, Q) που παριστάνει 
% έναν υπαρξιακό ποσοδείκτη. To X αντιστοιχεί στη μεταβλητή του ποσοδείκτη και το 
% Q σε μια λογική έκφραση πάνω στην οποία εφαρμόζεται ο ποσοδείκτης (π.χ. στο 
% forsome(X, airport(X)), έχουμε Q = airport(X)). (Μια μεταβλητή Prolog μπορεί να 
% ενοποιηθεί με οποιονδήποτε όρο, π.χ. με το airport(X), όχι μόνο με σταθερές και 
% μεταβλητές.) Υπάρχουν δύο επιπλέον ορίσματα στα αριστερά κάθε κανόνα, τα οποία 
% περιέχουν τις μεταβλητές της Prolog X και Q που χρησιμοποιούνται στο εσωτερικό του 
% κατηγορήματος-ποσοδείκτη. Ενοποιώντας αυτά τα ορίσματα με άλλες εκφράσεις, 
% επηρεάζουμε το εσωτερικό του κατηγορήματος-ποσοδείκτη. Για παράδειγμα, με X = Y
% και Q = airport(X), το foresome(X, Q) γίνεται forsome(Y, airport(Y)) ή ισοδύναμα
% (αφού οι μεταβλητές X και Y έχουν ενοποιηθεί) forsome(X, airport(X)).
%
% To forall παριστάνει τον καθολικό ποσοδείκτη. Ο ψευδο-ποσοδείκτης the(Χ, Q) 
% χρησιμοποιείται για να αναφερθούμε σε οντότητες που έχουν πρωτεύοντα ρόλο στη
% συνδιάλεξη. Για παράδειγμα, το "ο πελάτης" παριστάνεται ως the(X, client(X)), το 
% οποίο υποδηλώνει μια οντότητα που είναι πελάτης και έχει πρωτεύοντα ρόλο στη 
% συνδιάλεξη).  
det(X, Q, the(X, Q)) --> [τη].
det(X, Q, the(X, Q)) --> [την].
det(X, Q, the(X, Q)) --> [το].
det(X, Q, the(X, Q)) --> [τον].
det(X, Q, the(X, Q)) --> [ο].
det(X, Q, forsome(X, Q)) --> [μια].
det(X, Q, forsome(X, Q)) --> [μία].
det(X, Q, forsome(X, Q)) --> [ένας].
det(X, Q, forsome(X, Q)) --> [έναν].
det(X, Q, forsome(X, Q)) --> [ένα].
det(X, Q, forall(X, Q)) --> [κάθε].

%%%%%% Υπόλοιποι κανόνες της γραμματικής:

% Στην περίπτωση που ένα np είναι ένα κύριο όνομα (pn) με το άρθρο του,
% η σημασιολογική αναπαράσταση (Sem) του np είναι η ίδια με του pn. Για παράδειγμα, 
% η αναπαράσταση του "την Αθήνα" θα είναι η ίδια με την αναπαράσταση του "Αθήνα",
% δηλαδή "ath". Το "_" δείχνει ότι αδιαφορούμε για τις αντίστοιχες τιμές.
% Ο κανόνας αυτός είναι σχεδιασμένος για να χρησιμοποιείται μόνο με οριστικά 
% άρθρα. Θεωρούμε ότι τα κύρια ονόματα δεν θα χρησιμοποιηθούν ποτέ με αόριστα 
% άρθρα (π.χ. "κάθε Αθήνα"). 
np(Sem) --> det(_, _, _), pn(Sem).

% Ομοίως, αν το np είναι μια αντωνυμία, η σημασιολογική αναπαράσταση του np είναι
% η ίδια με εκείνη της αντωνυμίας.
np(Sem) --> pron(Sem).

% Για να γίνει κατανοητός ο παρακάτω κανόνας, ας θεωρήσουμε ένα np όπως το 
% "κάθε πτήση". Το "κάθε" εισάγει ένα κατηγόρημα Sem1 = forall(X1, Q) και το
% "πτήση" ένα κατηγόρημα "Sem2 = flight(X2)". Θέλουμε το "κάθε πτήση" να 
% απεικονίζεται στη λογική έκφραση Sem = forall(X1, flight(X1)), δηλαδή θέλουμε
% Sem = Sem1, αλλά αφού γίνει X2 = X1 και Q = Sem2. Αυτό μπορεί να γραφτεί ως
% εξής (μέσα σε άγκιστρα μπορούμε να βάλουμε επιπλέον συνθήκες που πρέπει να 
% ικανοποιούνται για να χρησιμοποιηθεί ο κανόνας):
% np(Sem) --> det(X1, Q, Sem1), nominal(X2, Sem2), {X2 = X1, Q = Sem2, Sem = Sem1}.
% ή πιο σύντομα:
np(Sem1) --> det(X1, Sem2, Sem1), nominal(X1, Sem2).

% Στην περίπτωση που ένα nominal αποτελείται από ένα μόνο n (ένα μόνο ουσιαστικό), 
% τότε η σημασιολογική αναπαράσταση του nominal είναι η ίδια με τη σημασιολογική
% αναπαράσταση του n (δηλαδή Sem). Όπως και στην περίπτωση των ουσιαστικών, τα 
% nominal έχουν ένα επιπλέον όρισμα (το X) που αντιστοιχεί στο αντικείμενο του 
% κόσμου στο οποίο αναφέρεται το nominal. 
nominal(X, Sem) --> n(X, Sem).

% Τα modifiers έχουν και αυτά ένα επιπλέον όρισμα (εδώ το X2) που αντιστοιχεί 
% στο αντικείμενο του κόσμου για το οποίο το modifiers παρέχει πληροφορίες.
% Για να γίνει κατανοητός ο παρακάτω κανόνας, ας υποθέσουμε ότι το n είναι 
% "πτήση" και το modifiers είναι "από την Αθήνα προς τη Θεσσαλονίκη". Η σημασιολογική
% αναπαράσταση του n θα έχει τη μορφή Sem1 = flight(X1) και του modifiers θα έχει
% τη μορφή Sem2 = and(depart_from(X2, ath), arrive_to(X2, thess)). Θέλουμε η 
% σημασιολογική αναπαράσταση του nominal να είναι Sem = and(Sem1, Sem2), αφού όμως
% γίνει Χ1 = Χ2. Αυτό μπορεί να γραφτεί:
% nominal(X, Sem) --> n(X1, Sem1), modifiers(X2, Sem2), 
%                      {X1 = X2, Sem = and(Sem1, Sem2), Χ = X1}.
% ή πιο σύντομα:
nominal(X, and(Sem1, Sem2)) --> n(X, Sem1), modifiers(X, Sem2).

% Αν το modifiers αποτελείται από έναν μόνο εμπρόθετο προσδιορισμό (pp), τότε η 
% σημασιολογική αναπαράσταση του modifiers είναι η ίδια με εκείνη του pp, δηλαδή
% Sem. Οι εμπρόθετοι προσδιορισμοί έχουν και αυτοί μια επιπλέον μεταβλητή που 
% (εδώ Χ) που αντιστοιχεί στο αντικείμενο του κόσμου για το οποίο ο εμπρόθετος 
% προσδιορισμός παρέχει πληροφορίες. Για παράδειγμα, αν το pp είναι "από την Αθήνα", 
% η σημασιολογική αναπαράσταση του modifiers και του pp θα έχει τη μορφή 
% depart_from(X, ath).
modifiers(X, Sem) --> pp(X, Sem).

% Αν το modifiers αποτελείται από έναν εμπρόθετο προσδιορισμό (pp) και ένα άλλο 
% modifiers, τότε η σημασιολογική αναπαράσταση του μεγάλου modifiers είναι η σύζευξη
% (and(Sem1, Sem2)) των σημασιολογικών αναπαραστάσεων του pp (Sem1) και του μικρού
% modifiers (Sem2). Με X1 = X2 επιβάλλουμε τα Sem1 και Sem2 να χρησιμοποιούν την 
% ίδια μεταβλητή για να αναφερθούν στο αντικείμενο του κόσμου για το οποίο παρέχουν
% πληροφορίες. Έτσι: 
% modifiers(X, Sem) --> pp(X1, Sem1), modifiers(X2, Sem2), 
%                       {Sem = and(Sem1, Sem2), X1 = X2, X = X1}.
% ή πιο σύντομα:
modifiers(X, and(Sem1, Sem2)) --> pp(X, Sem1), modifiers(X, Sem2).

% Για να γίνει κατανοητός ο παρακάτω κανόνας, ας θεωρήσουμε τον εμπρόθετο 
% προσδιορισμό (pp) "από την Αθήνα". Η σημασιολογική αναπαράσταση της πρόθεσης (prep) 
% "από" θα έχει τη μορφή Sem1 = depart_from(X, L) και του np "την Αθήνα" θα έχει 
% τη μορφή Sem2 = "ath". Θέλουμε η σημασιολογική αναπαράσταση του pp να είναι 
% depart_from(X, ath), δηλαδή να είναι η ίδια με την αναπαράσταση της πρόθεσης (Sem1),
% αφού όμως γίνει L = Sem2. Αυτό μπορεί να γραφτεί: 
% pp(X, Sem1) --> prep(X, L, Sem1), np(Sem2), {L = Sem2}.
% ή πιο σύντομα:
pp(X, Sem1) --> prep(X, Sem2, Sem1), np(Sem2).

% Για να γίνει κατανοητός ο παρακάτω κανόνας, ας θεωρήσουμε την περίπτωση που το 
% ρηματικό σύνολο (vp) είναι "θέλει μια πτήση". Η σημασιολογική αναπαράσταση του 
% v θα είναι της μορφής Sem1 = wants(X1, Y1) και του np θα είναι της μορφής Sem2 =
% forsome(X2, flight(X2)). Θέλουμε η σημασιολογική αναπαράσταση του vp να είναι
% wants(X1, forsome(X2, flight(X2))), δηλαδή να είναι η ίδια με την αναπαράσταση
% του ρήματος, αφού όμως γίνει Υ1 = Sem2. Κάθε vp έχει ένα όρισμα (εδώ Χ1) που 
% αντιστοιχεί στο αντικείμενο του κόσμου που είναι το υποκείμενο.
% Αυτό μπορεί να γραφτεί:
% vp(X1, Sem1) --> v(X1, Y1, Sem1), np(Sem2), {Y1 = Sem2}.
% ή πιο σύντομα:
vp(X1, Sem1) --> v(X1, Sem2, Sem1), np(Sem2).

% Για τον παρακάτω κανόνα, ας θεωρήσουμε την περίπτωση που το υποκείμενο (το np)
% είναι "εγώ" και το ρηματικό σύνολο "θέλω μια πτήση". Η σημασιολογική αναπαράσταση
% του np θα έχει τη μορφή Sem1 = speaker και του vp θα έχειτη μορφή Sem2 = 
% wants(X1, forsome(X2, flight(X2))). Θέλουμε η σημασιολογική αναπαράσταση του s
% να είναι wants(speaker, forsome(X2, flight(X2))), δηλαδή να είναι η ίδια με τη 
% σημασιολογική αναπαράσταση του vp (Sem2), αλλά επιπλέον να γίνει Χ1 = Sem1. Αυτό
% μπορεί να γραφτεί:
% s(Sem2) --> np(Sem1), vp(X1, Sem2), {X1 = Sem1}.
% ή πιο σύντομα:
s(Sem2) --> np(Sem1), vp(Sem1, Sem2).

% Αν δεν υπάρχει υποκείμενο, θεωρούμε ότι το υποκείμενο είναι ο ομιλητής. Αυτό 
% μπορεί να γραφτεί:
s(Sem) --> vp(X, Sem), {X = speaker}.
% ή πιο σύντομα:
s(Sem) --> vp(speaker, Sem). 

%%%%%% Τέλος.